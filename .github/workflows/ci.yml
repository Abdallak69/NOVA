name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev]'

      - name: Lint (ruff)
        run: ruff check src

      - name: Type check (mypy)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        continue-on-error: true
        run: |
          mypy --install-types --non-interactive --ignore-missing-imports src

      - name: Run tests with coverage (pytest)
        env:
          MPLBACKEND: Agg
          QT_QPA_PLATFORM: offscreen
        run: |
          python -m pytest -m "not hardware and not gui" --maxfail=1 --disable-warnings -q --cov=nova --cov-report=term-missing --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: ${{ matrix.os }},py${{ matrix.python-version }}
          fail_ci_if_error: false

      - name: Build package
        run: |
          python -m pip install build
          python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/* 